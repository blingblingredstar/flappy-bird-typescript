{"version":3,"sources":["ts/Image.ts","ts/sprite.ts","ts/Background.ts","ts/Foreground.ts","ts/utils.ts","ts/Audio.ts","ts/Bird.ts","ts/GetStatus.ts","ts/Pipe.ts","ts/game.ts","main.ts"],"names":[],"mappings":";AAgBA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhBM,IAAA,EASJ,SAAY,EAAA,EAAY,EAAY,EAAe,GAAc,EAAA,KAAA,GAC1D,KAAA,GAAK,EACL,KAAA,GAAK,EACL,KAAA,MAAQ,EACR,KAAA,OAAS,GAGlB,QAAA,QAAe;;;;ACVf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IANA,IAAA,EAAA,EAAA,QAAA,sBAGM,EAAS,IAAI,MACnB,EAAO,IAAM,EAAA,QAEb,QAAA,QAAe;;ACHf,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHA,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,aACqB,EAArB,SAAA,GAUI,SAAA,EAAA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAAe,IAAA,EAAA,OAAA,EAAA,KAAA,IAET,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAI,EAAI,EAAO,KAChB,GAAK,EACL,EAAA,GAAK,EACL,EAAA,OAAS,EACT,EAAA,QAAU,EANA,EAjBnB,OAAA,EAAA,EAAwC,EAAA,SAAxC,EAAA,EAAA,CAAA,CAAA,IAAA,OA0Ba,MAAA,WACT,EAAA,IAAI,UACF,EAAA,QACA,KAAK,GACL,KAAK,GACL,KAAK,MACL,KAAK,OACL,KAAK,GACL,KAAK,GACL,KAAK,OACL,KAAK,SAEP,EAAA,IAAI,UACF,EAAA,QACA,KAAK,GACL,KAAK,GACL,KAAK,MACL,KAAK,OACL,KAAK,GAAK,KAAK,MACf,KAAK,GACL,KAAK,OACL,KAAK,aA/CX,EAAA,GAAA,QAAA,QAAA;;ACuBA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA1BA,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,WAEM,EAuBN,SAAA,GApBI,SAAA,EAAA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAAa,IAAA,EAAA,OAAA,EAAA,KAAA,IAEP,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAI,EAAI,EAAO,EAAQ,EAAI,EAAI,EAAQ,KACxC,MAAQ,EAHA,EAYjB,OAAA,EAAA,EAvByB,EAAA,SAuBzB,EAAA,EAAA,CAAA,CAAA,IAAA,SAPe,MAAA,WACP,EAAA,QAAK,MAAM,UAAY,EAAA,QAAK,MAAM,SAC/B,KAAA,IAAM,KAAK,GAAK,KAAK,QAAU,KAAK,MAAQ,QAKvD,EAAA,GAAA,QAAA,QAAe;;ACzBF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAS,KAAK,GAAK;;;;;;;;;;;;ACmBhC,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAnBA,IAAA,EAAA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,0BACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,+BACA,EAAA,EAAA,QAAA,yBAEa,QAAA,QAAU,IAAI,MAC3B,QAAA,QAAQ,IAAM,EAAA,QAED,QAAA,KAAO,IAAI,MACxB,QAAA,KAAK,IAAM,EAAA,QAEE,QAAA,IAAM,IAAI,MACvB,QAAA,IAAI,IAAM,EAAA,QAEG,QAAA,UAAY,IAAI,MAC7B,QAAA,UAAU,IAAM,EAAA,QAEH,QAAA,IAAM,IAAI,MACvB,QAAA,IAAI,IAAM,EAAA;;ACqFV,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAzGA,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,WACA,EAAA,QAAA,WASM,EA2FN,SAAA,GA1Ec,SAAA,EAAA,EAAY,EAAY,EAAe,GAAc,IAAA,EAAA,OAAA,EAAA,KAAA,IACzD,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAI,EAAI,EAAO,KAChB,UAAY,CACf,CAAE,GAAI,IAAK,GAAI,KACf,CAAE,GAAI,IAAK,GAAI,KACf,CAAE,GAAI,IAAK,GAAI,KACf,CAAE,GAAI,IAAK,GAAI,MAEZ,EAAA,OAAS,GACT,EAAA,MAAQ,EACR,EAAA,QAAU,IACV,EAAA,KAAO,IACP,EAAA,MAAQ,EACR,EAAA,SAAW,EACX,EAAA,OAAS,EAdiD,EA0EnE,OAAA,EAAA,EA3FmB,EAAA,SA2FnB,EAAA,EAAA,CAAA,CAAA,IAAA,OA1Da,MAAA,WACH,IAAA,EAAO,KAAK,UAAU,KAAK,OACjC,EAAA,IAAI,OACJ,EAAA,IAAI,UAAU,KAAK,GAAI,KAAK,IAC5B,EAAA,IAAI,OAAO,KAAK,UAChB,EAAA,IAAI,UACF,EAAA,QACA,EAAK,GACL,EAAK,GACL,KAAK,MACL,KAAK,QACJ,KAAK,MAAQ,GACb,KAAK,OAAS,EACf,KAAK,MACL,KAAK,QAEP,EAAA,IAAI,YA0CR,CAAA,IAAA,SAxCe,MAAA,WAEN,KAAA,OAAS,EAAA,QAAK,MAAM,cAAgB,GAAK,EAEzC,KAAA,OAAS,EAAA,QAAK,MAAQ,KAAK,QAAW,EAAI,EAAI,EAE9C,KAAA,MAAQ,KAAK,MAAQ,KAAK,UAAU,OAErC,EAAA,QAAK,MAAM,eACR,KAAA,GAAK,IACL,KAAA,SAAW,EAAI,EAAA,SAEf,KAAA,OAAS,KAAK,QACd,KAAA,IAAM,KAAK,MAEZ,KAAK,GAAK,KAAK,OAAS,GAAK,EAAA,IAAI,OAAS,EAAA,QAAK,WAAW,SACvD,KAAA,GAAK,EAAA,IAAI,OAAS,EAAA,QAAK,WAAW,OAAS,KAAK,OAAS,EAC1D,EAAA,QAAK,MAAM,YACb,EAAA,QAAK,MAAM,eAIX,KAAK,OAAS,KAAK,MAChB,KAAA,SAAW,GAAK,EAAA,OAChB,KAAA,MAAQ,GAER,KAAA,UAAY,GAAK,EAAA,UAc9B,CAAA,IAAA,OATa,MAAA,WACT,EAAA,KAAK,OACA,KAAA,OAAS,KAAK,OAOvB,CAAA,IAAA,aALmB,MAAA,WACV,KAAA,MAAQ,MAIjB,EAAA,GAAA,QAAA,QAAe;;ACpEf,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArCA,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,WAEA,EAAA,EAAA,QAAA,aAEM,EAgCN,SAAA,GA5BI,SAAA,EAAA,EACA,EACA,EACA,EACA,EACA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IAEJ,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAI,EAAI,EAAO,KAChB,GAAK,EACL,EAAA,GAAK,EAJA,EAuBd,OAAA,EAAA,EAhCyB,EAAA,SAgCzB,EAAA,EAAA,CAAA,CAAA,IAAA,OAjBc,MAAA,SAAA,GACN,GACF,EAAA,IAAI,UACF,EAAA,QACA,KAAK,GACL,KAAK,GACL,KAAK,MACL,KAAK,OACL,KAAK,GACL,KAAK,GACL,KAAK,MACL,KAAK,YAMb,EAAA,GAAA,QAAA,QAAe;;AC+Ef,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IApHA,IAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,WAOM,EA2GN,WAlGE,SAAA,IAAA,EAAA,KAAA,GACO,KAAA,IAAM,CACT,GAAI,IACJ,GAAI,GAED,KAAA,OAAS,CACZ,GAAI,IACJ,GAAI,GAGD,KAAA,SAAW,GAEX,KAAA,MAAQ,GACR,KAAA,OAAS,IACT,KAAA,IAAM,GACN,KAAA,cAAgB,IAChB,KAAA,GAAK,EAkFd,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA/Ea,MAAA,WAAA,IAAA,EAAA,KACJ,KAAA,SAAS,QAAQ,SAAA,GACd,IAAA,EAAe,EAAE,GACjB,EAAkB,EAAE,GAAK,EAAK,OAAS,EAAK,IAElD,EAAA,IAAI,UACF,EAAA,QACA,EAAK,IAAI,GACT,EAAK,IAAI,GACT,EAAK,MACL,EAAK,OACL,EAAE,GACF,EACA,EAAK,MACL,EAAK,QAGP,EAAA,IAAI,UACF,EAAA,QACA,EAAK,OAAO,GACZ,EAAK,OAAO,GACZ,EAAK,MACL,EAAK,OACL,EAAE,GACF,EACA,EAAK,MACL,EAAK,YAqDb,CAAA,IAAA,SAhDe,MAAA,WAAA,IAAA,EAAA,KACN,EAAA,QAAK,MAAM,aAGZ,EAAA,QAAK,MAAQ,KAAQ,GAClB,KAAA,SAAS,KAAK,CACjB,GAAI,EAAA,IAAI,MACR,GAAI,KAAK,cAAgB,KAAK,SAAW,KAIxC,KAAA,SAAS,QAAQ,SAAA,GACd,IAAA,EAAsB,EAAE,GAAK,EAAK,OAAS,EAAK,IAIpD,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAE,IACpC,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAE,GAAK,EAAK,OAC9C,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAE,IACpC,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAE,GAAK,EAAK,QAE9C,EAAA,QAAK,MAAM,cAIX,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAE,IACpC,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAE,GAAK,EAAK,OAC9C,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,GAClC,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,OAAS,EAAsB,EAAK,QAE7D,EAAA,QAAK,MAAM,cAGb,EAAE,IAAM,EAAK,GAET,EAAE,GAAK,EAAK,OAAS,IACvB,EAAK,SAAS,QAEd,EAAA,QAAK,MAAM,oBAUnB,CAAA,IAAA,QALc,MAAA,WACL,KAAA,SAAW,OAIpB,EAAA,GAAA,QAAA,QAAe;;ACUf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA9HA,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,WAEM,EAAO,CAEX,MAAO,EAEP,MAAO,CACL,KAAM,OAAO,SAAS,aAAa,QAAQ,QAAmB,KAAO,EACrE,MAAO,EACP,KAAI,WACF,EAAA,IAAI,UAAY,OAChB,EAAA,IAAI,YAAc,OACd,EAAK,MAAM,UAAY,EAAK,MAAM,QACpC,EAAA,IAAI,UAAY,EAChB,EAAA,IAAI,KAAO,YACX,EAAA,IAAI,SAAS,KAAK,MAAQ,GAAI,EAAA,IAAI,MAAQ,EAAG,IAC7C,EAAA,IAAI,WAAW,KAAK,MAAQ,GAAI,EAAA,IAAI,MAAQ,EAAG,KACtC,EAAK,MAAM,UAAY,EAAK,MAAM,WAC3C,EAAA,IAAI,KAAO,YAEX,EAAA,IAAI,SAAS,KAAK,MAAQ,GAAI,IAAK,KACnC,EAAA,IAAI,WAAW,KAAK,MAAQ,GAAI,IAAK,KAErC,EAAA,IAAI,SAAS,KAAK,KAAO,GAAI,IAAK,KAClC,EAAA,IAAI,WAAW,KAAK,KAAO,GAAI,IAAK,OAGxC,YAAW,WACT,EAAA,QAAQ,OACH,KAAA,OAAS,EACT,KAAA,KAAO,KAAK,IAAI,KAAK,MAAO,KAAK,MACtC,aAAa,QAAQ,OAAQ,KAAK,KAAO,KAG3C,MAAK,WACE,KAAA,MAAQ,IAIjB,MAAO,CAEL,QAAS,EAET,SAAU,EAEV,OAAQ,EAER,SAAU,EAEV,YAAW,WACF,OAAA,KAAK,UAAY,KAAK,UAE/B,SAAQ,WACC,OAAA,KAAK,UAAY,KAAK,QAE/B,WAAU,WACD,OAAA,KAAK,UAAY,KAAK,UAE/B,aAAY,WACL,KAAA,QAAU,KAAK,UAEtB,UAAS,WACP,EAAA,UAAU,OACL,KAAA,QAAU,KAAK,QAEtB,YAAW,WACT,EAAA,IAAI,OACC,KAAA,QAAU,KAAK,WAGxB,WAAY,IAAI,EAAA,QAAW,EAAG,EAAG,IAAK,IAAK,EAAG,EAAA,IAAI,OAAS,IAAK,IAAK,KACrE,WAAY,IAAI,EAAA,QACd,IACA,EACA,IACA,IACA,EACA,EAAA,IAAI,OAAS,IACb,IACA,IACA,GAEF,UAAW,IAAI,EAAA,QAAW,EAAG,IAAK,IAAK,IAAK,EAAA,IAAI,MAAQ,EAAI,KAAS,IACrE,SAAU,IAAI,EAAA,QAAW,IAAK,IAAK,IAAK,IAAK,EAAA,IAAI,MAAQ,EAAI,MAAS,IACtE,SAAU,CACR,EAAG,IACH,EAAG,IACH,MAAO,GACP,OAAQ,IAGV,KAAM,IAAI,EAAA,QAAK,GAAI,IAAK,GAAI,IAE5B,KAAM,IAAI,EAAA,QAEV,KAAI,WACF,EAAA,IAAI,UAAY,UAChB,EAAA,IAAI,SAAS,EAAG,EAAG,EAAA,IAAI,MAAO,EAAA,IAAI,QAC7B,KAAA,WAAW,OACX,KAAA,WAAW,OACX,KAAA,KAAK,OACL,KAAA,KAAK,OACL,KAAA,UAAU,KAAK,EAAK,MAAM,UAAY,EAAK,MAAM,UACjD,KAAA,SAAS,KAAK,EAAK,MAAM,UAAY,EAAK,MAAM,UAChD,KAAA,MAAM,QAEb,OAAM,WACC,KAAA,WAAW,SACX,KAAA,KAAK,SACL,KAAA,KAAK,UAEZ,KAAI,WACF,EAAK,OACL,EAAK,QACL,EAAK,SAEL,sBAAsB,EAAK,QAI/B,QAAA,QAAe;;ACvFf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvCa,QAAA,IAAM,SAAS,eAAe,OAC9B,QAAA,IAAM,QAAA,IAAI,WAAW,MAClC,IAAA,EAAA,EAAA,QAAA,cAKA,QAAA,IAAI,iBAAiB,QAAS,SAAA,GACpB,OAAA,EAAA,QAAK,MAAM,SACZ,KAAA,EAAA,QAAK,MAAM,SACd,EAAA,QAAK,MAAM,YACX,MACG,KAAA,EAAA,QAAK,MAAM,OACV,GAAA,EAAA,QAAK,KAAK,GAAK,EAAA,QAAK,KAAK,QAAU,EACrC,OAEF,EAAA,QAAK,KAAK,OACV,MACG,KAAA,EAAA,QAAK,MAAM,SACR,IAAA,EAAO,QAAA,IAAI,wBACX,EAAS,EAAM,QAAU,EAAK,KAC9B,EAAS,EAAM,QAAU,EAAK,IAIlC,GAAU,EAAA,QAAK,SAAS,GACxB,GAAU,EAAA,QAAK,SAAS,EAAI,EAAA,QAAK,SAAS,OAC1C,GAAU,EAAA,QAAK,SAAS,GACxB,GAAU,EAAA,QAAK,SAAS,EAAI,EAAA,QAAK,SAAS,SAE1C,EAAA,QAAK,KAAK,QACV,EAAA,QAAK,KAAK,aACV,EAAA,QAAK,MAAM,QACX,EAAA,QAAK,MAAM,mBAMnB,EAAA,QAAK","file":"main.835f47f6.js","sourceRoot":"..","sourcesContent":["class SpriteImage {\n  /** 图片位于精灵图的x坐标起点 */\n  public sX: number\n  /** 图片位于精灵图的y坐标起点 */\n  public sY: number\n  /** 图片宽度 */\n  public width: number\n  /** 图片高度 */\n  public height: number\n  constructor(sX: number, sY: number, width: number, height: number) {\n    this.sX = sX\n    this.sY = sY\n    this.width = width\n    this.height = height\n  }\n}\nexport default SpriteImage\n","import img from '../img/sprite.png'\n\n/** 精灵图 */\nconst sprite = new Image()\nsprite.src = img\n\nexport default sprite\n","import SpriteImage from './Image'\nimport { ctx } from '../main'\nimport sprite from './sprite'\nexport default class Background extends SpriteImage {\n  /** 精灵图位于canvas的横坐标 */\n  public dX: number\n  /** 精灵图位于canvas的纵坐标 */\n  public dY: number\n  /** 精灵图位于canvas的宽度 */\n  public dWidth: number\n  /** 精灵图位于canvas的高度 */\n  public dHeight: number\n  constructor(\n    sX: number,\n    sY: number,\n    width: number,\n    heigth: number,\n    dX: number,\n    dY: number,\n    dWidth: number,\n    dHeight: number\n  ) {\n    super(sX, sY, width, heigth)\n    this.dX = dX\n    this.dY = dY\n    this.dWidth = dWidth\n    this.dHeight = dHeight\n  }\n  /** 将图片绘制在canvas元素上 */\n  public draw() {\n    ctx.drawImage(\n      sprite,\n      this.sX,\n      this.sY,\n      this.width,\n      this.height,\n      this.dX,\n      this.dY,\n      this.dWidth,\n      this.dHeight\n    )\n    ctx.drawImage(\n      sprite,\n      this.sX,\n      this.sY,\n      this.width,\n      this.height,\n      this.dX + this.width,\n      this.dY,\n      this.dWidth,\n      this.dHeight\n    )\n  }\n}\n","import Background from './Background'\nimport game from './game'\n\nclass ForeGround extends Background {\n  public moveX: number\n  constructor(\n    sX: number,\n    sY: number,\n    width: number,\n    height: number,\n    dX: number,\n    dY: number,\n    dWidth: number,\n    dHeigh: number,\n    moveX: number\n  ) {\n    super(sX, sY, width, height, dX, dY, dWidth, dHeigh)\n    this.moveX = moveX\n  }\n  public update() {\n    if (game.state.current === game.state.gaming) {\n      this.dX = (this.dX - this.moveX) % (this.width / 2)\n    }\n  }\n}\n\nexport default ForeGround\n","/** 角度常量 */\nexport const DEGREE = Math.PI / 180\n","/** tslint-disable */\nimport point from '../audio/sfx_point.wav'\nimport flap from '../audio/sfx_flap.wav'\nimport hit from '../audio/sfx_hit.wav'\nimport swooshing from '../audio/sfx_swooshing.wav'\nimport die from '../audio/sfx_die.wav'\n\nexport const SCORE_S = new Audio()\nSCORE_S.src = point\n\nexport const FLAP = new Audio()\nFLAP.src = flap\n\nexport const HIT = new Audio()\nHIT.src = hit\n\nexport const SWOOSHING = new Audio()\nSWOOSHING.src = swooshing\n\nexport const DIE = new Audio()\nDIE.src = die\n","import SpriteImage from './Image'\nimport sprite from './sprite'\nimport { ctx, cvs } from '../main'\nimport game from './game'\nimport { DEGREE } from './utils'\nimport { FLAP } from './Audio'\n\ninterface ICoor {\n  /** 横坐标 */\n  sX: number\n  /** 纵坐标 */\n  sY: number\n}\n\nclass Bird extends SpriteImage {\n  /** 动画数组 */\n  public animation: ICoor[]\n  /** 半径 */\n  public radius: number\n  /** 小鸟动画帧数 */\n  public frame: number\n  /** 重力系数 */\n  public gravity: number\n  /** 跳跃高度 */\n  public jump: number\n  /** 速度 */\n  public speed: number\n  /** 旋转角度 */\n  public rotation: number\n  /** 当前飞行速度 */\n  public period: number\n  constructor(sX: number, sY: number, width: number, height: number) {\n    super(sX, sY, width, height)\n    this.animation = [\n      { sX: 276, sY: 112 },\n      { sX: 276, sY: 139 },\n      { sX: 276, sY: 164 },\n      { sX: 276, sY: 139 }\n    ]\n    this.radius = 12\n    this.frame = 0\n    this.gravity = 0.25\n    this.jump = 4.6\n    this.speed = 0\n    this.rotation = 0\n    this.period = 0\n  }\n  public draw() {\n    const bird = this.animation[this.frame]\n    ctx.save()\n    ctx.translate(this.sX, this.sY)\n    ctx.rotate(this.rotation)\n    ctx.drawImage(\n      sprite,\n      bird.sX,\n      bird.sY,\n      this.width,\n      this.height,\n      -this.width / 2,\n      -this.height / 2,\n      this.width,\n      this.height\n    )\n    ctx.restore()\n  }\n  public update() {\n    /** 小鸟飞行速度 */\n    this.period = game.state.isGameReady() ? 10 : 5\n    /** 游戏每运行5帧，鸟运动1帧 */\n    this.frame += game.frame % this.period === 0 ? 1 : 0\n    /** 鸟的帧数每超过动画数组长度就归零 */\n    this.frame = this.frame % this.animation.length\n\n    if (game.state.isGameReady()) {\n      this.sY = 150\n      this.rotation = 0 * DEGREE\n    } else {\n      this.speed += this.gravity\n      this.sY += this.speed\n\n      if (this.sY + this.height / 2 >= cvs.height - game.foreground.height) {\n        this.sY = cvs.height - game.foreground.height - this.height / 2\n        if (game.state.isGaming()) {\n          game.state.setGameOver()\n        }\n      }\n\n      if (this.speed >= this.jump) {\n        this.rotation = 90 * DEGREE\n        this.frame = 1\n      } else {\n        this.rotation = -25 * DEGREE\n      }\n    }\n  }\n  /** 小鸟跳跃 */\n  public flap() {\n    FLAP.play()\n    this.speed = -this.jump\n  }\n  public speedReset() {\n    this.speed = 0\n  }\n}\n\nexport default Bird\n","import SpriteImage from './Image'\nimport { ctx } from '../main'\nimport game from './game'\nimport sprite from './sprite'\n\nclass GameStatus extends SpriteImage {\n  public dX: number\n  public dY: number\n  constructor(\n    sX: number,\n    sY: number,\n    width: number,\n    height: number,\n    dX: number,\n    dY: number\n  ) {\n    super(sX, sY, width, height)\n    this.dX = dX\n    this.dY = dY\n  }\n  public draw(gameFlag: boolean) {\n    if (gameFlag) {\n      ctx.drawImage(\n        sprite,\n        this.sX,\n        this.sY,\n        this.width,\n        this.height,\n        this.dX,\n        this.dY,\n        this.width,\n        this.height\n      )\n    }\n  }\n}\n\nexport default GameStatus\n","import { ctx, cvs } from '../main'\nimport sprite from './sprite'\nimport game from './game'\n\ninterface ICoor {\n  sX: number\n  sY: number\n}\n\nclass Pipe {\n  public top: ICoor\n  public bottom: ICoor\n  public position: ICoor[]\n  public width: number\n  public height: number\n  public gap: number\n  public maxYposition: -150\n  public dX: number\n  constructor() {\n    this.top = {\n      sX: 553,\n      sY: 0\n    }\n    this.bottom = {\n      sX: 502,\n      sY: 0\n    }\n\n    this.position = []\n\n    this.width = 53\n    this.height = 400\n    this.gap = 85\n    this.maxYposition = -150\n    this.dX = 2\n  }\n\n  public draw() {\n    this.position.forEach(p => {\n      const topYPosition = p.sY\n      const bottomYPosition = p.sY + this.height + this.gap\n\n      ctx.drawImage(\n        sprite,\n        this.top.sX,\n        this.top.sY,\n        this.width,\n        this.height,\n        p.sX,\n        topYPosition,\n        this.width,\n        this.height\n      )\n\n      ctx.drawImage(\n        sprite,\n        this.bottom.sX,\n        this.bottom.sY,\n        this.width,\n        this.height,\n        p.sX,\n        bottomYPosition,\n        this.width,\n        this.height\n      )\n    })\n  }\n\n  public update() {\n    if (!game.state.isGaming()) {\n      return\n    }\n    if (game.frame % 100 === 0) {\n      this.position.push({\n        sX: cvs.width,\n        sY: this.maxYposition * (Math.random() + 1)\n      })\n    }\n\n    this.position.forEach(p => {\n      const bottomPipeYPosition = p.sY + this.height + this.gap\n      /** 碰撞检测 */\n      if (\n        // 检测是否与顶部管道碰撞\n        game.bird.sX + game.bird.radius > p.sX &&\n        game.bird.sX - game.bird.radius < p.sX + this.width &&\n        game.bird.sY + game.bird.radius > p.sY &&\n        game.bird.sY - game.bird.radius < p.sY + this.height\n      ) {\n        game.state.setGameOver()\n      }\n      if (\n        // 检测是否与底部管道碰撞\n        game.bird.sX + game.bird.radius > p.sX &&\n        game.bird.sX - game.bird.radius < p.sX + this.width &&\n        game.bird.sY + game.bird.radius > bottomPipeYPosition &&\n        game.bird.sY - game.bird.radius < bottomPipeYPosition + this.height\n      ) {\n        game.state.setGameOver()\n      }\n\n      p.sX -= this.dX\n\n      if (p.sX + this.width <= 0) {\n        this.position.shift()\n\n        game.score.updateScore()\n      }\n    })\n  }\n\n  public reset() {\n    this.position = []\n  }\n}\n\nexport default Pipe\n","import Background from './Background'\nimport { cvs, ctx } from '../main'\nimport ForeGround from './Foreground'\nimport Bird from './Bird'\nimport GameStatus from './GetStatus'\nimport Pipe from './Pipe'\nimport { SCORE_S, DIE, SWOOSHING } from './Audio'\n\nconst game = {\n  /** 游戏帧数 */\n  frame: 0,\n  /** 游戏分数 */\n  score: {\n    best: Number.parseInt(localStorage.getItem('best') as string, 10) || 0,\n    value: 0,\n    draw() {\n      ctx.fillStyle = '#fff'\n      ctx.strokeStyle = '#000'\n      if (game.state.current === game.state.gaming) {\n        ctx.lineWidth = 2\n        ctx.font = '35px Teko'\n        ctx.fillText(this.value + '', cvs.width / 2, 50)\n        ctx.strokeText(this.value + '', cvs.width / 2, 50)\n      } else if (game.state.current === game.state.gameOver) {\n        ctx.font = '25px Teko'\n\n        ctx.fillText(this.value + '', 225, 186)\n        ctx.strokeText(this.value + '', 225, 186)\n\n        ctx.fillText(this.best + '', 225, 228)\n        ctx.strokeText(this.best + '', 225, 228)\n      }\n    },\n    updateScore() {\n      SCORE_S.play()\n      this.value += 1\n      this.best = Math.max(this.value, this.best)\n      localStorage.setItem('best', this.best + '')\n    },\n\n    reset() {\n      this.value = 0\n    }\n  },\n  /** 游戏状态 */\n  state: {\n    /** 游戏当前状态 */\n    current: 0,\n    /** 准备开始游戏 */\n    getReady: 0,\n    /** 游戏进行中 */\n    gaming: 1,\n    /** 游戏结束 */\n    gameOver: 2,\n    /** */\n    isGameReady() {\n      return this.current === this.getReady\n    },\n    isGaming() {\n      return this.current === this.gaming\n    },\n    isGameOver() {\n      return this.current === this.gameOver\n    },\n    setGameReady() {\n      this.current = this.getReady\n    },\n    setGaming() {\n      SWOOSHING.play()\n      this.current = this.gaming\n    },\n    setGameOver() {\n      DIE.play()\n      this.current = this.gameOver\n    }\n  },\n  background: new Background(0, 0, 275, 226, 0, cvs.height - 226, 275, 226),\n  foreground: new ForeGround(\n    276,\n    0,\n    224,\n    112,\n    0,\n    cvs.height - 112,\n    224,\n    112,\n    2\n  ),\n  gameReady: new GameStatus(0, 228, 173, 152, cvs.width / 2 - 173 / 2, 80),\n  gameOver: new GameStatus(175, 228, 225, 202, cvs.width / 2 - 225 / 2, 90),\n  startBtn: {\n    x: 120,\n    y: 263,\n    width: 83,\n    height: 29\n  },\n  /** 小鸟 */\n  bird: new Bird(50, 150, 34, 26),\n  /** 管道 */\n  pipe: new Pipe(),\n  /** 绘制画面 */\n  draw() {\n    ctx.fillStyle = '#70c5ce'\n    ctx.fillRect(0, 0, cvs.width, cvs.height)\n    this.background.draw()\n    this.foreground.draw()\n    this.bird.draw()\n    this.pipe.draw()\n    this.gameReady.draw(game.state.current === game.state.getReady)\n    this.gameOver.draw(game.state.current === game.state.gameOver)\n    this.score.draw()\n  },\n  update() {\n    this.foreground.update()\n    this.bird.update()\n    this.pipe.update()\n  },\n  loop() {\n    game.draw()\n    game.frame++\n    game.update()\n\n    requestAnimationFrame(game.loop)\n  }\n}\n\nexport default game\n","export const cvs = document.getElementById('cvs') as HTMLCanvasElement\nexport const ctx = cvs.getContext('2d') as CanvasRenderingContext2D\nimport game from './ts/game'\nimport Background from './ts/Background'\nimport sprite from './ts/sprite'\nimport Bird from './ts/Bird'\n\ncvs.addEventListener('click', event => {\n  switch (game.state.current) {\n    case game.state.getReady:\n      game.state.setGaming()\n      break\n    case game.state.gaming:\n      if (game.bird.sY - game.bird.radius <= 0) {\n        return\n      }\n      game.bird.flap()\n      break\n    case game.state.gameOver:\n      const rect = cvs.getBoundingClientRect()\n      const clickX = event.clientX - rect.left\n      const clickY = event.clientY - rect.top\n\n      if (\n        // 检查是否点击开始按钮\n        clickX >= game.startBtn.x &&\n        clickX <= game.startBtn.x + game.startBtn.width &&\n        clickY >= game.startBtn.y &&\n        clickY <= game.startBtn.y + game.startBtn.height\n      ) {\n        game.pipe.reset()\n        game.bird.speedReset()\n        game.score.reset()\n        game.state.setGameReady()\n      }\n      break\n  }\n})\n\ngame.loop()\n"]}